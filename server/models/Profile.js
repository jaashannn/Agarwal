import mongoose from 'mongoose';

const profileSchema = new mongoose.Schema({
  user: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true, unique: true },
  regdno: { type: String, trim: true },
  profilefor: { type: String, enum: ['Self', 'Son', 'Daughter', 'Friend', 'Nephew', 'Niece', 'Other'], trim: true },
  marital: { type: String, enum: ['Never Married', 'Divorced', 'Widowed', 'Separated'], trim: true },
  gotra: { 
    type: String, 
    enum: [
      'Airan', 'Arora', 'Bansal', 'Bhandal', 'Bindal', 'Dharan', 'Garg', 'Goyal', 
      'Goyan', 'Gupta', 'Jindal', 'Kansal', 'Khatri', 'Kuchhal', 'Mangal', 'Mittal', 
      'Nangal', 'Sharma', 'Singhal', 'Tayal', 'Tingal'
    ], 
    trim: true 
  },
  hobbies: [{ type: String, trim: true }],
  language: [{ type: String, trim: true }],
  hfeet: { type: String, enum: ['4', '5', '6', '7'], trim: true },
  hinch: { type: String, enum: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11'], trim: true },
  weight: { type: Number, min: 0 },
  body: { type: String, enum: ['Slim', 'Average', 'Athletic', 'Heavy'], trim: true },
  complexion: { type: String, enum: ['Fair', 'Wheatish', 'Dark', 'Medium'], trim: true },
  physical: { type: String, enum: ['Normal', 'Physically Challenged'], trim: true },
  education: { type: String, trim: true },
  occupation: { type: String, enum: ['Private Sector', 'Government', 'Business', 'Professional', 'Not Employed'], trim: true },
  employed: { type: String, trim: true },
  income: { type: String, trim: true },
  food: { type: String, enum: ['Vegetarian', 'Non-Vegetarian', 'Vegan', 'Jain', 'Eggetarian'], trim: true },
  smoking: { type: String, enum: ['Yes', 'No', 'Occasionally'], trim: true },
  drinking: { type: String, enum: ['Yes', 'No', 'Occasionally'], trim: true },
  day: { type: Number },
  month: { type: String, trim: true },
  year: { type: Number },
  place: { type: String, trim: true },
  time: { type: String, trim: true },
  isNRI: { type: Boolean, default: false },
  nriCountry: { type: String, trim: true },
  nriStatus: { type: String, enum: ['PR', 'Work Permit', 'Citizen'], trim: true },
  daybirth: { type: String, trim: true },
  manglik: { type: String, enum: ['Yes', 'No', 'Not Sure'], trim: true },
  region: { type: String, enum: ['Aggarwal', 'Arora', 'Khatri', 'Bhraman', 'Jain'], trim: true },
  status: { type: String, trim: true },
  type: { type: String, enum: ['Joint', 'Nuclear'], trim: true },
  fname: { type: String, trim: true },
  foccupation: { type: String, trim: true },
  mname: { type: String, trim: true },
  moccupation: { type: String, trim: true },
  property: { type: String, trim: true },
  anyother: { type: String, trim: true },
  bno: { type: Number, min: 0 },
  bmarried: { type: Number, min: 0 },
  bwhere: { type: String, trim: true },
  sno: { type: Number, min: 0 },
  smarried: { type: Number, min: 0 },
  swhere: { type: String, trim: true },
  spouse: { type: String, trim: true },
  address: { type: String, trim: true },
  city: { type: String, trim: true },
  district: { type: String, trim: true },
  pincode: { type: String, trim: true },
  state: { type: String, trim: true },
  country: { type: String, trim: true },
  speciality: { type: String, trim: true },
  description: { type: String, trim: true, maxlength: 1000 },
  age: { type: Number },
  images: [{ type: String, trim: true }],
  isCompleted: { type: Boolean, default: false },
  isPaymentDone: { type: Boolean, default: false },
  createdAt: { type: Date, default: Date.now }
});

export default mongoose.model('Profile', profileSchema);